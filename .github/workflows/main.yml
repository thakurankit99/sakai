name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Sakai Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Checkout sakaiprops Repository
        uses: actions/checkout@v4
        with:
          repository: thakurankit99/sakaiprops
          ref: main
          token: ${{ secrets.SAKAIPROPS_PAT }}
          path: sakaiprops

      - name: Prepare Docker Build Context
        run: |
          echo "ðŸ“¦ Preparing Tomcat and Sakai inside Docker build context..."

          # Move Tomcat from sakaiprops to current working directory for Dockerfile
          cp sakaiprops/apache-tomcat-9.0.69.tar.gz ./
          cp sakaiprops/sakai.properties ./
          cp sakaiprops/context.xml ./
          cp sakaiprops/server.xml ./
          cp sakaiprops/mysql-connector-j-8.4.0.jar ./
          cp sakaiprops/setenv.sh ./

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker Image (Maven Build Inside Docker)
        run: |
          echo "âœ… Building Sakai in Docker..."
          docker build --no-cache -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "âœ… Pushing Docker image..."
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "ðŸ”„ Stopping existing Sakai container..."
            docker stop sakai-app || true
            docker rm sakai-app || true

            echo "ðŸ§¹ Cleaning up old Sakai images..."
            docker images | grep 'ankitosm/sakai' | awk '{print $3}' | xargs docker rmi -f || true

            echo "ðŸ”„ Pulling latest Sakai image..."
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}

            echo "ðŸš€ Starting new Sakai container..."
            docker run -d --name sakai-app \
              --network=sakai_default \
              -p 8181:8181 \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}

            echo "âœ… Deployment complete! Sakai should be running on http://${{ secrets.VPS_HOST }}:8181"
