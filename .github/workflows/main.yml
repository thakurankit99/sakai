name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Set Up Java 11 (Preinstalled by GitHub)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Verify Java Installation
        run: |
          echo "üîç Checking Java Environment..."
          java -version

      - name: Use GitHub‚Äôs Preinstalled Maven
        run: |
          echo "Using GitHub's preinstalled Maven:"
          mvn -version

      - name: Checkout `sakaiprops` Repository
        uses: actions/checkout@v4
        with:
          repository: thakurankit99/sakaiprops
          ref: main
          token: ${{ secrets.SAKAIPROPS_PAT }}
          path: sakaiprops

      - name: Extract Tomcat 9.0.69 from `sakaiprops`
        run: |
          mkdir -p tomcat
          tar -xvzf sakaiprops/apache-tomcat-9.0.69.tar.gz -C tomcat --strip-components=1

          # Ensure conf/ exists immediately after extraction
          if [ ! -d "tomcat/conf" ]; then
            echo "‚ùå ERROR: conf/ directory is missing after extraction!"
            exit 1
          fi

          echo "‚úÖ Tomcat extracted successfully."
          echo "CATALINA_HOME=${{ github.workspace }}/tomcat" >> $GITHUB_ENV
          echo "SAKAI_HOME=${{ github.workspace }}/tomcat/sakai" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$CATALINA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Replace Default Tomcat Configurations with `sakaiprops`
        run: |
          mkdir -p $CATALINA_HOME/conf $CATALINA_HOME/lib $CATALINA_HOME/sakai $CATALINA_HOME/bin
          cp sakaiprops/context.xml $CATALINA_HOME/conf/context.xml
          cp sakaiprops/server.xml $CATALINA_HOME/conf/server.xml
          cp sakaiprops/sakai.properties $CATALINA_HOME/sakai/sakai.properties
          cp sakaiprops/mysql-connector-j-8.4.0.jar $CATALINA_HOME/lib/mysql-connector-j-8.4.0.jar
          cp sakaiprops/setenv.sh $CATALINA_HOME/bin/setenv.sh
          chmod +x $CATALINA_HOME/bin/setenv.sh

      - name: Checkout Sakai 23.x Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Build Sakai `master` POM
        run: |
          cd master
          mvn clean install

      - name: Build Full Sakai Project
        run: |
          mvn clean install sakai:deploy \
            -DresolveDependenciesInParallel \
            -Dbuildcache -B \
            -Dmaven.tomcat.home=$CATALINA_HOME \
            -Dsakai.home=$CATALINA_HOME/sakai \
            -Dsakai.components.dir=$CATALINA_HOME/components \
            -Djava.net.preferIPv4Stack=true \
            -Dmaven.test.skip=true \
            -Dsakai.cleanup=true | tee build.log

      - name: Verify Tomcat Structure
        run: |
          echo "üìÇ Checking Tomcat structure..."
          ls -lah $CATALINA_HOME || echo "‚ö†Ô∏è Warning: $CATALINA_HOME not found"
          ls -lah $CATALINA_HOME/conf/ || echo "‚ö†Ô∏è Warning: $CATALINA_HOME/conf/ not found"
          ls -lah $CATALINA_HOME/webapps/ || echo "‚ö†Ô∏è Warning: $CATALINA_HOME/webapps/ not found"
          ls -lah $CATALINA_HOME/components/ || echo "‚ö†Ô∏è Warning: $CATALINA_HOME/components/ not found"

      - name: Archive Tomcat Directory
        run: |
          tar -czvf ${{ runner.temp }}/sakai-build.tar.gz -C $CATALINA_HOME .

      - name: Upload Entire Tomcat Directory as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sakai-build
          path: ${{ runner.temp }}/sakai-build.tar.gz
          compression-level: 9

  docker:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository (For Dockerfile)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}
          persist-credentials: false

      - name: Verify Dockerfile Exists
        run: |
          echo "üîç Checking Dockerfile..."
          if [ ! -f "Dockerfile" ]; then
            echo "‚ùå ERROR: Dockerfile not found in $(pwd)!"
            ls -lah
            exit 1
          else
            echo "‚úÖ Dockerfile found."

      - name: Set Environment Variables in Docker Job
        run: |
          echo "CATALINA_HOME=${{ github.workspace }}/tomcat" >> $GITHUB_ENV
          echo "SAKAI_HOME=${{ github.workspace }}/tomcat/sakai" >> $GITHUB_ENV

      - name: Download Sakai Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sakai-build
          path: ${{ runner.temp }}/sakai-build

      - name: Extract Sakai Build
        run: |
          echo "üîç Checking if sakai-build.tar.gz exists..."
          if [ ! -f "${{ runner.temp }}/sakai-build/sakai-build.tar.gz" ]; then
            echo "‚ùå ERROR: Artifact sakai-build.tar.gz not found!"
            exit 1
          fi

          echo "‚úÖ Extracting Sakai Build..."
          mkdir -p $CATALINA_HOME
          tar -xzvf "${{ runner.temp }}/sakai-build/sakai-build.tar.gz" -C "$CATALINA_HOME"

      - name: Build Docker Image
        run: |
          echo "‚úÖ Building Docker image..."
          docker build --no-cache -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "‚úÖ Pushing Docker image..."
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: docker
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}
            docker rm -f sakai-app || true
            docker run -d --name sakai-app \
              --network=sakai_default \
              -p 8181:8181 \
              -e CATALINA_HOME=/tomcat \
              -e SAKAI_HOME=/tomcat/sakai \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}
