name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Sakai Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Set Up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          architecture: x64

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set Environment Variables
        run: |
          echo "CATALINA_HOME=${{ github.workspace }}/tomcat" >> $GITHUB_ENV
          echo "SAKAI_HOME=${{ github.workspace }}/tomcat/sakai" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$CATALINA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Build and Deploy Sakai
        run: |
          mkdir -p tomcat/webapps tomcat/components tomcat/sakai
          mvn clean install sakai:deploy \
            -DresolveDependenciesInParallel \
            -Dbuildcache -B \
            -Dmaven.tomcat.home=${{ github.workspace }}/tomcat \
            -Dsakai.home=${{ github.workspace }}/tomcat/sakai \
            -Dsakai.components.dir=${{ github.workspace }}/tomcat/components \
            -Djava.net.preferIPv4Stack=true \
            -Dmaven.test.skip=true \
            -Dsakai.cleanup=true | tee build.log

      - name: Upload Entire Tomcat Directory as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sakai-build
          path: tomcat/
          compression-level: 0

  docker:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository (For Dockerfile)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch_name }}

      - name: Download All Sakai Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sakai-build
          path: tomcat/

      - name: Checkout sakaiprops Repository
        uses: actions/checkout@v4
        with:
          repository: thakurankit99/sakaiprops
          ref: main
          token: ${{ secrets.SAKAIPROPS_PAT }}
          path: sakaiprops

      - name: Ensure sakaiprops Files Are Placed Correctly
        run: |
          mkdir -p tomcat/conf tomcat/lib tomcat/sakai tomcat/bin
          cp sakaiprops/context.xml tomcat/conf/context.xml
          cp sakaiprops/server.xml tomcat/conf/server.xml
          cp sakaiprops/sakai.properties tomcat/sakai/sakai.properties
          cp sakaiprops/mysql-connector-j-8.4.0.jar tomcat/lib/mysql-connector-j-8.4.0.jar
          cp sakaiprops/setenv.sh tomcat/bin/setenv.sh
          chmod +x tomcat/bin/setenv.sh

      - name: Build Docker Image
        run: |
          echo "âœ… Building Docker image..."
          docker build --no-cache -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: docker
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}
            docker rm -f sakai-app || true
            docker run -d --name sakai-app \
              --network=sakai_default \
              -p 8181:8181 \
              -e CATALINA_HOME=/opt/tomcat \
              -e SAKAI_HOME=/opt/tomcat/sakai \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}
