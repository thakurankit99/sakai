name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Set Up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          architecture: x64

      - name: Verify Java Installation
        run: java -version

      - name: Install Maven 3.8.4
        run: |
          wget https://archive.apache.org/dist/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz
          sudo tar -xvzf apache-maven-3.8.4-bin.tar.gz -C /opt
          sudo mv /opt/apache-maven-3.8.4 /opt/maven
          echo "MAVEN_HOME=/opt/maven" >> $GITHUB_ENV
          echo "PATH=$MAVEN_HOME/bin:$PATH" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Verify Maven Installation
        run: mvn -version

      - name: Checkout `sakaiprops` Repository
        uses: actions/checkout@v4
        with:
          repository: thakurankit99/sakaiprops
          ref: main
          token: ${{ secrets.SAKAIPROPS_PAT }}
          path: sakaiprops

      - name: Extract Tomcat from `sakaiprops`
        run: |
          mkdir -p tomcat
          tar -xvzf sakaiprops/apache-tomcat-9.0.69.tar.gz -C tomcat --strip-components=1
          echo "CATALINA_HOME=${{ github.workspace }}/tomcat" >> $GITHUB_ENV
          echo "SAKAI_HOME=${{ github.workspace }}/tomcat/sakai" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$CATALINA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Environment Variables
        run: |
          echo "âœ… JAVA_HOME: $JAVA_HOME"
          echo "âœ… MAVEN_HOME: $MAVEN_HOME"
          echo "âœ… CATALINA_HOME: $CATALINA_HOME"
          echo "âœ… SAKAI_HOME: $SAKAI_HOME"

      - name: Replace Default Tomcat Configurations with `sakaiprops`
        run: |
          mkdir -p $CATALINA_HOME/sakai
          cp sakaiprops/context.xml $CATALINA_HOME/conf/context.xml
          cp sakaiprops/server.xml $CATALINA_HOME/conf/server.xml
          cp sakaiprops/sakai.properties $CATALINA_HOME/sakai/sakai.properties
          cp sakaiprops/mysql-connector-j-8.4.0.jar $CATALINA_HOME/lib/mysql-connector-j-8.4.0.jar
          cp sakaiprops/setenv.sh $CATALINA_HOME/bin/setenv.sh
          chmod +x $CATALINA_HOME/bin/setenv.sh

      - name: Checkout Sakai 23.x Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Build Sakai `master` POM
        run: |
          cd master
          mvn clean install

      - name: Build Full Sakai Project
        run: |
          mvn clean install sakai:deploy \
            -DresolveDependenciesInParallel \
            -Dbuildcache -B \
            -Dmaven.tomcat.home=$CATALINA_HOME \
            -Dsakai.home=$CATALINA_HOME/sakai \
            -Dsakai.components.dir=$CATALINA_HOME/components \
            -Djava.net.preferIPv4Stack=true \
            -Dmaven.test.skip=true \
            -Dsakai.cleanup=true | tee build.log

      - name: Verify Tomcat Structure
        run: |
          echo "ðŸ“‚ Checking Tomcat structure..."
          ls -lah $CATALINA_HOME/
          ls -lah $CATALINA_HOME/webapps/
          ls -lah $CATALINA_HOME/components/
          ls -lah $CATALINA_HOME/conf/

      - name: Upload Entire Tomcat Directory as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sakai-build
          path: ${{ env.CATALINA_HOME }}/
          compression-level: 0

  docker:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download Sakai Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sakai-build
          path: ${{ env.CATALINA_HOME }}/

      - name: Build Docker Image
        run: |
          echo "âœ… Building Docker image..."
          docker build --no-cache -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "âœ… Pushing Docker image..."
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: docker
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}
            docker rm -f sakai-app || true
            docker run -d --name sakai-app \
              --network=sakai_default \
              -p 8181:8181 \
              -e CATALINA_HOME=/tomcat \
              -e SAKAI_HOME=/tomcat/sakai \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}
