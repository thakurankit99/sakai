name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Sakai Repository (Dynamic Branch)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Verify Parent POM Exists
        run: |
          if [ ! -f master/pom.xml ]; then
            echo "❌ master/pom.xml not found! Ensure it exists in the selected branch."
            exit 1
          else
            echo "✅ master/pom.xml found."
          fi

      - name: Install Required Dependencies (Java 11, Git, Maven 3.8.4, Tomcat 9.0.69)
        run: |
          echo "🔄 Installing Java 11 (Temurin)..."
          wget https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.16.1%2B1/OpenJDK11U-jdk_x64_linux_hotspot_11.0.16.1_1.tar.gz -O /tmp/temurin11.tar.gz
          sudo tar -xvzf /tmp/temurin11.tar.gz -C /opt
          sudo mv /opt/jdk-11.0.16.1+1 /opt/temurin-11
          echo "export JAVA_HOME=/opt/temurin-11" >> ~/.bashrc
          echo "export PATH=$JAVA_HOME/bin:$PATH" >> ~/.bashrc
          source ~/.bashrc
          java -version

          echo "🔄 Installing Maven 3.8.4..."
          wget https://archive.apache.org/dist/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz
          sudo tar -xvzf apache-maven-3.8.4-bin.tar.gz -C /opt
          sudo mv /opt/apache-maven-3.8.4 /opt/maven
          echo "export MAVEN_HOME=/opt/maven" >> ~/.bashrc
          echo "export PATH=$MAVEN_HOME/bin:$PATH" >> ~/.bashrc
          source ~/.bashrc
          mvn -version

          echo "🔄 Installing Tomcat 9.0.69..."
          wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.69/bin/apache-tomcat-9.0.69.tar.gz -O /tmp/tomcat.tar.gz
          sudo tar -xvzf /tmp/tomcat.tar.gz -C /opt
          sudo mv /opt/apache-tomcat-9.0.69 /opt/tomcat
          echo "export CATALINA_HOME=/opt/tomcat" >> ~/.bashrc
          source ~/.bashrc

      - name: Cache Maven Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Parent POM First
        run: |
          mvn clean install -N
          mvn clean install -pl master -am -DskipTests

      - name: Build Sakai 23 with Maven
        env:
          MAVEN_OPTS: -Djava.awt.headless=true -Dmaven.test.skip=true
        run: mvn clean install -Dmaven.test.skip=true

      - name: Checkout `sakaiprops` Repository (Fetch `sakai.properties`)
        uses: actions/checkout@v2
        with:
          repository: thakurankit99/sakaiprops
          ref: main
          token: ${{ secrets.SAKAIPROPS_PAT }}

      - name: Move `sakai.properties` to Build Directory
        run: |
          echo "✅ Moving sakai.properties to config directory..."
          mkdir -p config
          mv sakai.properties config/sakai.properties

      - name: Build Docker Image with `sakai.properties`
        run: |
          echo "✅ Building Docker image..."
          docker build -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          echo "✅ Pushing Docker image..."
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "🔄 Pulling latest Sakai image..."
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}
            
            echo "🔄 Ensuring Docker network exists..."
            docker network create sakai_default || true
            
            echo "🛑 Stopping existing Sakai container..."
            docker stop sakai-app || true
            
            echo "🗑 Removing old Sakai container..."
            docker rm sakai-app || true

            echo "🔄 Cloning `sakaiprops` repository..."
            git clone https://github.com/thakurankit99/sakaiprops.git ~/sakaiprops
            mv ~/sakaiprops/sakai.properties ~/sakai.properties

            echo "🚀 Starting new Sakai container..."
            docker run -d --name sakai-app --network=sakai_default -p 8080:8080 \
              -v ~/sakai.properties:/opt/tomcat/sakai/sakai.properties \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}
            
            echo "✅ Deployment complete! Sakai should be running on http://${{ secrets.VPS_HOST }}:8080"
