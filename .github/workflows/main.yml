name: Sakai CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository (Switch to 23.x)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 23.x  # Ensures we build from 23.x even though the workflow is in main

      - name: Verify Dockerfile Exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "❌ Dockerfile not found! Make sure it exists in the 23.x branch."
            exit 1
          else
            echo "✅ Dockerfile found."
          fi

      - name: Set Up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64

      - name: Cache Maven Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Sakai with Maven
        env:
          MAVEN_OPTS: -Djava.awt.headless=true -Dmaven.test.skip=true
        run: mvn clean install -Dmaven.test.skip=true

      - name: Build Docker Image
        run: |
          echo "✅ Building Docker image..."
          docker build -t ankitosm/skai:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          echo "✅ Pushing Docker image..."
          docker push ankitosm/skai:latest

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "🔄 Pulling latest Sakai image..."
            docker pull ankitosm/skai:latest
            
            echo "🔄 Ensuring Docker network exists..."
            docker network create sakai_default || true
            
            echo "🛑 Stopping existing Sakai container..."
            docker stop sakai-app || true
            
            echo "🗑 Removing old Sakai container..."
            docker rm sakai-app || true
            
            echo "🚀 Starting new Sakai container..."
            docker run -d --name sakai-app --network=sakai_default -p 8080:8080 ankitosm/skai:latest
            
            echo "✅ Deployment complete! Sakai should be running on http://${{ secrets.VPS_HOST }}:8080"
