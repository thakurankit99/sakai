name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Sakai Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Set Up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          architecture: x64

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set Environment Variables
        run: |
          echo "CATALINA_HOME=/opt/tomcat" >> $GITHUB_ENV
          echo "SAKAI_HOME=$CATALINA_HOME/sakai" >> $GITHUB_ENV

      - name: Build Master POM
        run: |
          cd master
          mvn clean install

      - name: Build and Deploy Sakai
        run: |
          mkdir -p $CATALINA_HOME/sakai
          mvn clean install sakai:deploy \
            -DresolveDependenciesInParallel \
            -Dbuildcache -B \
            -Dmaven.tomcat.home=$CATALINA_HOME \
            -Dsakai.home=$CATALINA_HOME/sakai \
            -Djava.net.preferIPv4Stack=true \
            -Dmaven.test.skip=true \
            -Dsakai.cleanup=true | tee build.log

      - name: Check for Build Errors
        if: failure()
        run: |
          echo "‚ùå Build failed! Showing last 50 lines of logs..."
          tail -n 50 build.log
          exit 1

      - name: Verify Components & Webapps Are Deployed
        run: |
          echo "üìÇ Checking /opt/tomcat/components..."
          ls -lah $CATALINA_HOME/components || exit 1

          echo "üìÇ Checking /opt/tomcat/webapps..."
          ls -lah $CATALINA_HOME/webapps || exit 1

      - name: Upload Components & Webapps as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sakai-build
          path: |
            $CATALINA_HOME/webapps/
            $CATALINA_HOME/components/
          compression-level: 0

  docker:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository (For Dockerfile)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch_name }}

      - name: Download All Sakai Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: sakai-build
          path: .

      - name: Verify Downloaded Files Before Docker Build
        run: |
          if [ ! -d "webapps" ] || [ -z "$(ls -A webapps)" ]; then
            echo "‚ùå webapps directory is empty! Failing build."
            exit 1
          fi

          if [ ! -d "components" ] || [ -z "$(ls -A components)" ]; then
            echo "‚ùå components directory is empty! Failing build."
            exit 1
          fi

      - name: Checkout sakaiprops Repository
        uses: actions/checkout@v4
        with:
          repository: thakurankit99/sakaiprops
          ref: main
          token: ${{ secrets.SAKAIPROPS_PAT }}
          path: sakaiprops

      - name: Prepare sakaiprops Files for Docker Build
        run: |
          cp sakaiprops/apache-tomcat-9.0.69.tar.gz ./
          cp sakaiprops/sakai.properties ./
          cp sakaiprops/context.xml ./
          cp sakaiprops/server.xml ./
          cp sakaiprops/mysql-connector-j-8.4.0.jar ./
          cp sakaiprops/setenv.sh ./

      - name: Build Docker Image
        run: |
          echo "‚úÖ Building Docker image..."
          docker build --no-cache -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          echo "‚úÖ Pushing Docker image..."
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: docker
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "üîÑ Pulling latest Sakai image..."
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}

            echo "üîÑ Ensuring Docker network exists..."
            docker network create sakai_default || true

            echo "üõë Stopping existing Sakai container..."
            docker stop sakai-app || true
            docker rm sakai-app || true

            echo "üöÄ Starting new Sakai container..."
            docker run -d --name sakai-app \
              --network=sakai_default \
              -p 8181:8181 \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}

            echo "‚úÖ Deployment complete! Sakai should be running on http://${{ secrets.VPS_HOST }}:8181"
