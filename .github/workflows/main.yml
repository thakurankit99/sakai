name: Sakai 23 CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Enter the branch name to deploy (e.g., 23.x)"
        required: true
        default: "23.x"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Sakai Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch_name }}

      - name: Set Up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          architecture: x64

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set Environment Variables
        run: |
          echo "CATALINA_HOME=/opt/tomcat" >> $GITHUB_ENV
          echo "SAKAI_HOME=$CATALINA_HOME/sakai" >> $GITHUB_ENV

      - name: Build and Deploy Sakai (Ensure Components and Webapp Populate Naturally)
        run: |
          mkdir -p $CATALINA_HOME/sakai
          mvn clean install sakai:deploy \
            -Dmaven.tomcat.home=$CATALINA_HOME \
            -Dsakai.home=$CATALINA_HOME/sakai \
            -Djava.net.preferIPv4Stack=true \
            -Dmaven.test.skip=true \
            -Dmaven.cleanup=true | tee build.log

          echo "‚úÖ Checking Sakai directory structure..."
          ls -lah $CATALINA_HOME

      - name: Verify Components and Webapp Folders
        run: |
          echo "üîç Verifying required folders..."
          ls -lah $CATALINA_HOME/components || echo "‚ö†Ô∏è components folder missing!"
          ls -lah $CATALINA_HOME/webapps || echo "‚ö†Ô∏è webapps folder missing!"
          ls -lah $CATALINA_HOME/lib || echo "‚ö†Ô∏è lib folder missing!"
          ls -lah $CATALINA_HOME/bin || echo "‚ö†Ô∏è bin folder missing!"
          ls -lah $CATALINA_HOME/conf || echo "‚ö†Ô∏è conf folder missing!"

      - name: Package Tomcat Directory (Ensure All Files Are Included)
        run: |
          echo "üì¶ Packing entire Tomcat directory..."
          tar -czvf tomcat-package.tar.gz -C $CATALINA_HOME .
          ls -lah | tee collected_files.log  # Debugging step to verify archive

      - name: Upload Tomcat Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tomcat-package
          path: tomcat-package.tar.gz
          compression-level: 0

  docker:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository (For Dockerfile)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch_name }}

      - name: Download Tomcat Package (Built with Sakai)
        uses: actions/download-artifact@v4
        with:
          name: tomcat-package
          path: .

      - name: Ensure Artifact Exists
        run: |
          ls -lah
          if [ ! -f "tomcat-package.tar.gz" ]; then
            echo "‚ùå tomcat-package.tar.gz not found!"
            exit 1
          fi

      - name: Build Docker Image
        run: |
          echo "‚úÖ Building Docker image with pre-built Tomcat..."
          docker build --no-cache -t ankitosm/sakai:${{ github.event.inputs.branch_name }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          echo "‚úÖ Pushing Docker image..."
          docker push ankitosm/sakai:${{ github.event.inputs.branch_name }}

  deploy:
    needs: docker
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            echo "üîÑ Stopping and removing old Sakai container..."
            docker stop sakai-app || true
            docker rm sakai-app || true

            echo "üßπ Cleaning up old Sakai images..."
            docker images | grep 'ankitosm/sakai' | awk '{print $3}' | xargs docker rmi -f || true

            echo "üîÑ Pulling latest Sakai image..."
            docker pull ankitosm/sakai:${{ github.event.inputs.branch_name }}

            echo "üîÑ Ensuring Docker network exists..."
            docker network create sakai_default || true

            echo "üöÄ Starting new Sakai container..."
            docker run -d --name sakai-app \
              --network=sakai_default \
              -p 8080:8080 \
              -v ~/sakai/sakai.properties:/opt/tomcat/sakai/sakai.properties \
              -v ~/sakai/context.xml:/opt/tomcat/conf/context.xml \
              -v ~/sakai/server.xml:/opt/tomcat/conf/server.xml \
              -v ~/sakai/mysql-connector-j-8.4.0.jar:/opt/tomcat/lib/mysql-connector-j-8.4.0.jar \
              ankitosm/sakai:${{ github.event.inputs.branch_name }}

            echo "‚úÖ Deployment complete! Sakai should be running on http://${{ secrets.VPS_HOST }}:8080"
